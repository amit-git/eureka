/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
    compile project(':eureka-core')
    compile project(':eureka-server')
    compile project(':eureka-read-server')
    compile project(':eureka-write-server')
    compile project(':eureka-extensions:eureka-kafka')
    compile "jline:jline:${jline_version}"
    testCompile "junit:junit:${junit_version}"
}

task runCluster (dependsOn: [classes], type: JavaExec) {
    group = "Examples"
    description = "Run Eureka cluster (default -Pwrite=1 -Pread=2)"

    main = "com.netflix.eureka.server.EmbeddedEurekaCluster"
    classpath = sourceSets.main.runtimeClasspath

    args = [
            project.hasProperty("write") ? write : 1,
            project.hasProperty("read") ? read : 2
    ]
}

// Why not gradle task? Because of issue https://issues.gradle.org/browse/GRADLE-1147
build << {
    buildDir.mkdirs()
    File script = new File(buildDir, 'cli.sh')

    script.withPrintWriter {
        it.println '#!/bin/sh'
        it.println "java -cp ${getRuntimeClasspath()} com.netflix.eureka.cmd.EurekaCLI \"\$@\""
    }

    // make it executable
    ant.chmod(file: script.absolutePath, perm: 'u+x')
}

String getRuntimeClasspath() {
    sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
}
